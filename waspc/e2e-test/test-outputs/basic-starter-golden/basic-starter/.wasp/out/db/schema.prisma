datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String @id @default(uuid())
  username String
  tasks    Task[]
  tags     Tag[]
  auth     Auth?
}

model Task {
  id          String   @id @default(uuid())
  description String
  isDone      Boolean  @default(false)
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  tags        Tag[]
}

model Tag {
  id     String @id @default(uuid())
  name   String @unique
  color  String
  user   User   @relation(fields: [userId], references: [id])
  userId String
  tasks  Task[]
}

model Auth {
  id         String         @id @default(uuid())
  userId     String?        @unique
  user       User?          @relation(fields: [userId], references: [id], onDelete: Cascade)
  identities AuthIdentity[]
  sessions   Session[]
}

model AuthIdentity {
  providerName   String
  providerUserId String
  providerData   String @default("{}")
  authId         String
  auth           Auth   @relation(fields: [authId], references: [id], onDelete: Cascade)

  @@id([providerName, providerUserId])
}

model Session {
  id        String   @id @unique
  expiresAt DateTime
  userId    String
  auth      Auth     @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@index([userId])
}
