module Wasp.Cli.Command.CreateNewProject.StarterTemplates.StarterTemplate
  ( StarterTemplate (..),
    TemplateMetadata (..),
    StartingInstructionsBuilder,
    WaspAppAiGenerator (..),
    getTemplateStartingInstructions,
    getTemplateName,
  )
where

import StrongPath (Dir', Path', Rel')
import qualified Wasp.Cli.GithubRepo as GhRepo
import qualified Wasp.Cli.Interactive as Interactive

data StarterTemplate
  = -- | Template from a Github repo.
    GhRepoStarterTemplate !GhRepo.GithubRepoRef !TemplateDirPath !TemplateMetadata
  | -- | Template from a disk, that comes bundled with wasp CLI.
    LocalStarterTemplate !TemplateDirPath !TemplateMetadata
  | -- | Template that will be dynamically generated by AI based on user's input.
    AiGeneratedStarterTemplate !WaspAppAiGenerator !TemplateMetadata

-- | Path to a directory containing template files.
type TemplateDirPath = Path' Rel' Dir'

data TemplateMetadata = TemplateMetadata
  { _tmplName :: !String,
    _tmplDescription :: !String,
    _tmplBuildStartingInstructions :: !StartingInstructionsBuilder
  }

-- | AI generators that can generate Wasp apps.
data WaspAppAiGenerator = WaspAI

instance Interactive.IsOption StarterTemplate where
  showOption = getTemplateName
  showOptionDescription = Just . getTemplateDescription

-- | Function that returns instructions for running the newly created (from the template) Wasp project.
-- Instructions assume that user is positioned right next to the just created project directory,
-- whose name is provided via projectDirName.
type StartingInstructionsBuilder = ProjectDirName -> StartingInstructions

type ProjectDirName = String

type StartingInstructions = String

getTemplateMetadata :: StarterTemplate -> TemplateMetadata
getTemplateMetadata = \case
  GhRepoStarterTemplate _ _ metadata -> metadata
  LocalStarterTemplate _ metadata -> metadata
  AiGeneratedStarterTemplate _ metadata -> metadata

getTemplateName :: StarterTemplate -> String
getTemplateName = _tmplName . getTemplateMetadata

getTemplateDescription :: StarterTemplate -> String
getTemplateDescription = _tmplDescription . getTemplateMetadata

getTemplateStartingInstructions :: StarterTemplate -> StartingInstructionsBuilder
getTemplateStartingInstructions = _tmplBuildStartingInstructions . getTemplateMetadata
