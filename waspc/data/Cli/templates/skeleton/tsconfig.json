// =============================== IMPORTANT =================================
// This file is mainly used for Wasp IDE support.
//
// Wasp will compile your code with slightly different (less strict) compilerOptions.
// You can increase the configuration's strictness (e.g., by adding
// "noUncheckedIndexedAccess": true), but you shouldn't reduce it (e.g., by
// adding "strict": false). Just keep in mind that this will only affect your
// IDE support, not the actual compilation.
//
// Full TypeScript configurability is coming very soon :)
{
  "compilerOptions": {
    "module": "esnext",
    // Needed because this is used as a project reference.
    "composite": true,
    "target": "esnext",
    // We're bundling all code in the end so this is the most appropriate option,
    // it's also important for autocomplete to work properly.
    "moduleResolution": "bundler",
    "jsx": "preserve",
    "strict": true,
    "esModuleInterop": true,
    // Prevent features that don't work with transpilers (e.g., const enums)
    "isolatedModules": true,
    "moduleDetection": "force",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "skipLibCheck": true,
    "allowJs": true,
    "typeRoots": [
      // This is needed to properly support Vitest testing with jest-dom matchers.
      // Types for jest-dom are not recognized automatically and Typescript complains
      // about missing types e.g. when using `toBeInTheDocument` and other matchers.
      "node_modules/@testing-library",
      // Specifying type roots overrides the default behavior of looking at the
      // node_modules/@types folder so we had to list it explicitly.
      // Source 1: https://www.typescriptlang.org/tsconfig#typeRoots
      // Source 2: https://github.com/testing-library/jest-dom/issues/546#issuecomment-1889884843
      // NOTE: Overriding `typeRoots` prevents TS from climbing up the file
      // tree and including `node_modules/@types` from parent folders.
      "node_modules/@types"
    ],
    // Wasp internally uses TypeScript's project references to compile the
    // code. Referenced projects may not disable emit, so we must specify an
    // outDir.
    "outDir": ".wasp/out/user"
  },
  "include": [
    "src"
  ]
}
