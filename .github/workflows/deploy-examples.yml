name: Deploy example apps to Fly

on:
  # Allow calling this workflow from other workflows
  workflow_call:
    inputs:
      version:
        type: string
        description: "Wasp version to use for deployment (default to latest)"
        required: false
    secrets:
      FLY_GITHUB_PRODUCTION_TOKEN:
        description: "Fly API token for deploying apps"
        required: true

  # Allow calling this workflow manually from the GitHub UI
  workflow_dispatch:
    inputs:
      version:
        description: "Wasp version to use for deployment (default to latest)"
        required: false
        default: "" # We are relying on the install script treating the empty string as the latest version

concurrency:
  group: "deploy-examples"
  cancel-in-progress: true

env:
  WASP_TELEMETRY_DISABLE: 1

jobs:
  deploy:
    strategy:
      matrix:
        app-dir:
          - examples/waspello
          - examples/waspleau
          - examples/websockets-realtime-voting

    name: Deploy ${{ matrix.app-dir }}

    runs-on: ubuntu-latest

    environment:
      name: ${{ matrix.app-dir }}-production
      url: ${{ steps.app-info.outputs.url }}

    steps:
      - name: Install Wasp
        run: |
          curl -sSfL https://get.wasp.sh/installer.sh | sh -s -- -v "${{  inputs.version }}"

      - name: Install Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@v1

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Wasp TS Config (if needed)
        working-directory: ${{ matrix.app-dir }}
        run: |
          if [ -f *.wasp.ts ]; then
            wasp ts-setup
          fi

      - name: Deploy
        working-directory: ${{ matrix.app-dir }}
        run: |
          wasp deploy fly deploy --org wasp
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_GITHUB_PRODUCTION_TOKEN }}

      - name: Get deployed app info
        id: app-info
        working-directory: ${{ matrix.app-dir }}
        run: |
          echo "url=https://$(flyctl status -c fly-client.toml --json | jq -r .Hostname)" >> $GITHUB_OUTPUT
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_GITHUB_PRODUCTION_TOKEN }}
